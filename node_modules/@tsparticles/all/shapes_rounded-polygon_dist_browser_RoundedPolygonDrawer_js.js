/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.2.1
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_all"] = this["webpackChunk_tsparticles_all"] || []).push([["shapes_rounded-polygon_dist_browser_RoundedPolygonDrawer_js"],{

/***/ "../../shapes/rounded-polygon/dist/browser/RoundedPolygonDrawer.js":
/*!*************************************************************************!*\
  !*** ../../shapes/rounded-polygon/dist/browser/RoundedPolygonDrawer.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoundedPolygonDrawer: () => (/* binding */ RoundedPolygonDrawer)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"../../engine/dist/browser/index.js\");\n\nconst defaultSides = 5,\n  defaultRadius = 5;\nclass RoundedPolygonDrawer {\n  async draw(data) {\n    const {\n        context,\n        particle,\n        radius\n      } = data,\n      {\n        polygon,\n        roundedPath\n      } = await __webpack_require__.e(/*! import() */ \"shapes_rounded-polygon_dist_browser_Utils_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./Utils.js */ \"../../shapes/rounded-polygon/dist/browser/Utils.js\"));\n    roundedPath(context, polygon(particle.sides, radius), particle.borderRadius ?? defaultRadius);\n  }\n  getSidesCount(particle) {\n    const roundedPolygon = particle.shapeData;\n    return Math.round((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(roundedPolygon?.sides ?? defaultSides));\n  }\n  async particleInit(container, particle) {\n    const shapeData = particle.shapeData;\n    particle.borderRadius = Math.round((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.radius ?? defaultSides)) * container.retina.pixelRatio;\n    await Promise.resolve();\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/all/../../shapes/rounded-polygon/dist/browser/RoundedPolygonDrawer.js?");

/***/ })

}]);