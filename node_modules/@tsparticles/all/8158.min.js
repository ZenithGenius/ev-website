/*! For license information please see 8158.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_all=this.webpackChunk_tsparticles_all||[]).push([[8158],{8158:(o,t,e)=>{e.d(t,{StrokeColorUpdater:()=>a});var i=e(3624);class a{constructor(o){this.container=o}async init(o){const t=this.container,e=o.options,a=(0,i.wA)(e.stroke,o.id,e.reduceDuplicates);o.strokeWidth=(0,i.Gu)(a.width)*t.retina.pixelRatio,o.strokeOpacity=(0,i.Gu)(a.opacity??1),o.strokeAnimation=a.color?.animation;const s=(0,i.lN)(a.color)??o.getFillColor();s&&(o.strokeColor=(0,i.bS)(s,o.strokeAnimation,t.retina.reduceFactor)),await Promise.resolve()}isEnabled(o){const t=o.strokeAnimation,{strokeColor:e}=o;return!o.destroyed&&!o.spawning&&!!t&&(void 0!==e?.h.value&&e.h.enable||void 0!==e?.s.value&&e.s.enable||void 0!==e?.l.value&&e.l.enable)}async update(o,t){this.isEnabled(o)&&((0,i.PB)(o.strokeColor,t),await Promise.resolve())}}}}]);