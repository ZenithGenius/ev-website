/*! For license information please see 2899.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_all=this.webpackChunk_tsparticles_all||[]).push([[2899],{2899:(e,t,s)=>{s.d(t,{calcClosestPointOnSegment:()=>A,drawPolygonMask:()=>n,drawPolygonMaskPath:()=>o,parsePaths:()=>E,segmentBounce:()=>S});var a=s(3624);const _=2,T={min:0,max:1},c=2;function n(e,t,s){const _=(0,a.tX)(s.color);if(!_)return;const T=t[0];e.beginPath(),e.moveTo(T.x,T.y);for(const s of t)e.lineTo(s.x,s.y);e.closePath(),e.strokeStyle=(0,a.iz)(_),e.lineWidth=s.width,e.stroke()}function o(e,t,s,_){const T=1,c=0,n=0,o=1;e.setTransform(T,c,n,o,_.x,_.y);const E=(0,a.tX)(s.color);E&&(e.strokeStyle=(0,a.iz)(E,s.opacity),e.lineWidth=s.width,e.stroke(t),e.resetTransform())}function E(e,t,s){const a=[];for(const _ of e){const e=_.element.pathSegList,T=e?.numberOfItems??0,c={x:0,y:0};for(let _=0;_<T;_++){const T=e?.getItem(_),n=window.SVGPathSeg;switch(T?.pathSegType){case n.PATHSEG_MOVETO_ABS:case n.PATHSEG_LINETO_ABS:case n.PATHSEG_CURVETO_CUBIC_ABS:case n.PATHSEG_CURVETO_QUADRATIC_ABS:case n.PATHSEG_ARC_ABS:case n.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:case n.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:{const e=T;c.x=e.x,c.y=e.y;break}case n.PATHSEG_LINETO_HORIZONTAL_ABS:c.x=T.x;break;case n.PATHSEG_LINETO_VERTICAL_ABS:c.y=T.y;break;case n.PATHSEG_LINETO_REL:case n.PATHSEG_MOVETO_REL:case n.PATHSEG_CURVETO_CUBIC_REL:case n.PATHSEG_CURVETO_QUADRATIC_REL:case n.PATHSEG_ARC_REL:case n.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:case n.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:{const e=T;c.x+=e.x,c.y+=e.y;break}case n.PATHSEG_LINETO_HORIZONTAL_REL:c.x+=T.x;break;case n.PATHSEG_LINETO_VERTICAL_REL:c.y+=T.y;break;case n.PATHSEG_UNKNOWN:case n.PATHSEG_CLOSEPATH:continue}a.push({x:c.x*t+s.x,y:c.y*t+s.y})}}return a}function A(e,t,s){const{dx:c,dy:n}=(0,a.oW)(s,e),{dx:o,dy:E}=(0,a.oW)(t,e),A=(c*o+n*E)/(o**_+E**_),S={x:e.x+o*A,y:e.y+E*A,isOnSegment:A>=T.min&&A<=T.max};return A<T.min?(S.x=e.x,S.y=e.y):A>T.max&&(S.x=t.x,S.y=t.y),S}function S(e,t,s){const{dx:_,dy:T}=(0,a.oW)(e,t),n=Math.atan2(T,_),o=a.OW.create(Math.sin(n),-Math.cos(n)),E=c*(s.x*o.x+s.y*o.y);o.multTo(E),s.subFrom(o)}}}]);