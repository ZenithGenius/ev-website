/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.2.1
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_all"] = this["webpackChunk_tsparticles_all"] || []).push([["shapes_spiral_dist_browser_SpiralDrawer_js"],{

/***/ "../../shapes/spiral/dist/browser/SpiralDrawer.js":
/*!********************************************************!*\
  !*** ../../shapes/spiral/dist/browser/SpiralDrawer.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpiralDrawer: () => (/* binding */ SpiralDrawer)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"../../engine/dist/browser/index.js\");\n\nconst defaultInnerRadius = 1,\n  defaultLineSpacing = 1,\n  defaultWidthFactor = 10;\nclass SpiralDrawer {\n  async draw(data) {\n    const {\n      drawSpiral\n    } = await __webpack_require__.e(/*! import() */ \"shapes_spiral_dist_browser_Utils_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./Utils.js */ \"../../shapes/spiral/dist/browser/Utils.js\"));\n    drawSpiral(data);\n  }\n  async particleInit(container, particle) {\n    const pixelRatio = container.retina.pixelRatio,\n      shapeData = particle.shapeData;\n    particle.spiralInnerRadius = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.innerRadius ?? defaultInnerRadius) * pixelRatio;\n    particle.spiralLineSpacing = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.lineSpacing ?? defaultLineSpacing) * pixelRatio;\n    particle.spiralWidthFactor = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.widthFactor ?? defaultWidthFactor);\n    await Promise.resolve();\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/all/../../shapes/spiral/dist/browser/SpiralDrawer.js?");

/***/ })

}]);