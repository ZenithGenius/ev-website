/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.2.1
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_all"] = this["webpackChunk_tsparticles_all"] || []).push([["shapes_arrow_dist_browser_Utils_js"],{

/***/ "../../shapes/arrow/dist/browser/Utils.js":
/*!************************************************!*\
  !*** ../../shapes/arrow/dist/browser/Utils.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawArrow: () => (/* binding */ drawArrow)\n/* harmony export */ });\nconst double = 2,\n  defaultHeightFactor = 0.5,\n  defaultHeadWidthFactor = 0.2,\n  defaultBodyHeightFactor = 0.5,\n  half = 0.5,\n  origin = {\n    x: 0,\n    y: 0\n  };\nfunction drawArrow(data) {\n  const {\n      context,\n      particle,\n      radius\n    } = data,\n    width = radius * double,\n    heightFactor = particle.heightFactor ?? defaultHeightFactor,\n    headWidthFactor = particle.headWidthFactor ?? defaultHeadWidthFactor,\n    bodyHeightFactor = particle.bodyHeightFactor ?? defaultBodyHeightFactor,\n    height = width * heightFactor,\n    headWidth = width * headWidthFactor,\n    bodyHeight = height * bodyHeightFactor;\n  context.moveTo(-width * half, origin.y);\n  context.lineTo(-width * half, -bodyHeight * half);\n  context.lineTo(width * half - headWidth, -bodyHeight * half);\n  context.lineTo(width * half - headWidth, -height * half);\n  context.lineTo(width * half + headWidth, origin.y);\n  context.lineTo(width * half - headWidth, height * half);\n  context.lineTo(width * half - headWidth, bodyHeight * half);\n  context.lineTo(-width * half, bodyHeight * half);\n  context.lineTo(-width * half, origin.y);\n}\n\n//# sourceURL=webpack://@tsparticles/all/../../shapes/arrow/dist/browser/Utils.js?");

/***/ })

}]);