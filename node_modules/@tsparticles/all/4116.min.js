/*! For license information please see 4116.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_all=this.webpackChunk_tsparticles_all||[]).push([[4116],{4116:(t,e,i)=>{i.d(e,{ZigZagPathGenerator:()=>o});var a=i(3624);const s=.5*Math.PI;class o{constructor(){this.options={waveHeight:{min:0,max:3},waveLength:{min:0,max:5}}}generate(t,e){void 0===t.zigzag&&(t.zigzag={counter:(0,a.sZ)(),waveHeight:(0,a.Gu)(this.options.waveHeight),waveLength:(0,a.Gu)(this.options.waveLength)});const i=.5/t.zigzag.waveLength*e.factor;t.zigzag.counter+=i;const o=t.zigzag.waveHeight*Math.sin(t.zigzag.counter);return t.position.x+=o*Math.cos(t.velocity.angle+s),t.position.y+=o*Math.sin(t.velocity.angle+s),Promise.resolve(a.OW.origin)}async init(t){const e=t.actualOptions.particles.move.path.options;this.options.waveLength=e.waveLength??this.options.waveLength,this.options.waveHeight=e.waveHeight??this.options.waveHeight,await Promise.resolve()}reset(){}update(){}}}}]);