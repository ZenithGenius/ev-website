/*! For license information please see 222.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_path_curl_noise=this.webpackChunk_tsparticles_path_curl_noise||[]).push([[222],{222:(e,s,t)=>{t.d(s,{CurlNoiseGenerator:()=>n});var i=t(533),o=t(245);const p={speed:.2,step:250};class n{constructor(){const e=new o.SimplexNoise;this._simplex=e.noise2d,this.options=(0,i.deepExtend)({},p)}generate(e){const s=e.getPosition(),{speed:t,step:o}=this.options,p=s.x/o,n=s.y/o,a=.001,r=(this._simplex.noise(p,n+a)-this._simplex.noise(p,n-a))/.002,c=(this._simplex.noise(p+a,n)-this._simplex.noise(p-a,n))/.002;return e.velocity.x=0,e.velocity.y=0,Promise.resolve(i.Vector.create(t*r,t*-c))}async init(e){const s=e.actualOptions.particles.move.path.options;this.options.seed=s?.seed,this.options.speed=(s?.speed??p.speed)*e.retina.pixelRatio,this.options.step=s?.step??p.step,this._simplex.seed(this.options.seed??(0,i.getRandom)()),await Promise.resolve()}reset(){}update(){}}}}]);