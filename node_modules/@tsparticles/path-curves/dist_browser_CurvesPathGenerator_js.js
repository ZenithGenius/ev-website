/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.2.1
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_path_curves"] = this["webpackChunk_tsparticles_path_curves"] || []).push([["dist_browser_CurvesPathGenerator_js"],{

/***/ "./dist/browser/CurvesPathGenerator.js":
/*!*********************************************!*\
  !*** ./dist/browser/CurvesPathGenerator.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CurvesPathGenerator: () => (/* binding */ CurvesPathGenerator)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nconst double = 2,\n  doublePI = Math.PI * double;\nfunction randomVelocity() {\n  const offset = 0.8,\n    factor = 0.6;\n  return (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * factor + offset;\n}\nclass CurvesPathGenerator {\n  constructor() {\n    this.options = {\n      rndFunc: null,\n      period: 100,\n      nbHarmonics: 2,\n      attenHarmonics: 0.8,\n      lowValue: -0.03,\n      highValue: 0.03\n    };\n  }\n  async generate(p) {\n    if (!p.pathGen) {\n      const options = this.options,\n        {\n          CurvesPathGen\n        } = await __webpack_require__.e(/*! import() */ \"dist_browser_Curves_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./Curves.js */ \"./dist/browser/Curves.js\"));\n      p.pathGen = CurvesPathGen(options.rndFunc, options.period, options.nbHarmonics, options.attenHarmonics, options.lowValue, options.highValue);\n    }\n    if (!p.curveVelocity) {\n      p.curveVelocity = _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.Vector.origin;\n      p.curveVelocity.length = randomVelocity();\n      p.curveVelocity.angle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * doublePI;\n    } else {\n      p.curveVelocity.length += 0.01;\n      p.curveVelocity.angle = (p.curveVelocity.angle + p.pathGen()) % doublePI;\n    }\n    p.velocity.x = 0;\n    p.velocity.y = 0;\n    return p.curveVelocity;\n  }\n  async init(container) {\n    const sourceOptions = container.actualOptions.particles.move.path.options,\n      {\n        options\n      } = this;\n    if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isFunction)(sourceOptions.rndFunc)) {\n      options.rndFunc = sourceOptions.rndFunc;\n    } else if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isString)(sourceOptions.rndFunc)) {\n      options.rndFunc = window[sourceOptions.rndFunc] ?? this.options.rndFunc;\n    }\n    options.period = sourceOptions.period ?? options.period;\n    options.nbHarmonics = sourceOptions.nbHarmonics ?? options.nbHarmonics;\n    options.attenHarmonics = sourceOptions.attenHarmonics ?? options.attenHarmonics;\n    options.lowValue = sourceOptions.lowValue ?? options.lowValue;\n    options.highValue = sourceOptions.highValue ?? options.highValue;\n    await Promise.resolve();\n  }\n  reset(particle) {\n    delete particle.pathGen;\n    delete particle.curveVelocity;\n  }\n  update() {}\n}\n\n//# sourceURL=webpack://@tsparticles/path-curves/./dist/browser/CurvesPathGenerator.js?");

/***/ })

}]);